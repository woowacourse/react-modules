{"version":3,"file":"useEscapeModal.js","sourceRoot":"","sources":["useEscapeModal.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,SAAS,cAAc,CAAC,UAAsB;IAC5C,SAAS,kBAAkB,CACzB,CAA+C,EAC/C,EAAU;QAEV,IAAI,CAAC,CAAC,MAAM,YAAY,WAAW,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC;YAC1D,UAAU,EAAE,CAAC;QACf,CAAC;IACH,CAAC;IAED,SAAS,CAAC,GAAG,EAAE;QACb,SAAS,aAAa,CAAC,CAAgB;YACrC,IAAI,CAAC,CAAC,GAAG,KAAK,QAAQ,EAAE,CAAC;gBACvB,UAAU,EAAE,CAAC;YACf,CAAC;QACH,CAAC;QAED,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;QAClD,OAAO,GAAG,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;IACpE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IACjB,OAAO,EAAE,kBAAkB,EAAE,CAAC;AAChC,CAAC;AAED,eAAe,cAAc,CAAC","sourcesContent":["import { useEffect } from 'react';\n\nfunction useEscapeModal(closeModal: () => void) {\n  function handleClickOverlay(\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    id: string\n  ) {\n    if (e.target instanceof HTMLElement && e.target.id === id) {\n      closeModal();\n    }\n  }\n\n  useEffect(() => {\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        closeModal();\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [closeModal]);\n  return { handleClickOverlay };\n}\n\nexport default useEscapeModal;\n"]}